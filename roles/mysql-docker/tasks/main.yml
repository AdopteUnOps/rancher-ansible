---
- name: Create mysql configuration
  file: path=/etc/mysql/conf.d state=directory mode=0755
  become: yes

- name: Apply mysql configuration
  template: src=mysql.conf.j2 dest=/etc/mysql/conf.d/mysql.cnf
  become: yes

- name: Create a mysql docker container
  docker_container:
      name: mysql
      image: mysql:{{ mysql_version }}
      restart_policy: always
      state: started
      volumes:
      - /etc/mysql/conf.d:/etc/mysql/conf.d
      - /var/lib/mysql:/var/lib/mysql
      ports:
      - "3306:3306"
      env:
        MYSQL_ROOT_PASSWORD="{{ mysql_root_password }}"
        MYSQL_USER="{{ mysql_user }}"
        MYSQL_PASSWORD="{{ mysql_password }}"
        MYSQL_DATABASE="{{ mysql_database }}"
  become: yes

- name: Create mysql backup
  docker_container:
    name: mysql-backup-s3
    image: schickling/postgres-backup-s3
    state: started
    env:
      S3_ACCESS_KEY_ID={{ mysql_s3_access_key }}
      S3_SECRET_ACCESS_KEY={{ mysql_s3_secret_key }}
      S3_BUCKET={{ mysql_s3_bucket }}
      S3_PREFIX={{ mysql_s3_prefix }}
      S3_REGION={{ mysql_s3_region }}
      SCHEDULE="{{ mysql_s3_schedule }}"
      MYSQL_USER=root
      MYSQL_PASSWORD={{ mysql_root_password }}
      MYSQL_HOST={{ mysql_host }}
  become: yes
  when: mysql_backup_enabled == True

- name: Configure mysql optimize
  docker_container:
      name: mysql-optimizer
      image: adopteunops/mysql-optimizer:latest
      restart_policy: always
      state: started
      links:
      - "mysql:mysql"
      env:
        MYSQL_USERNAME="root"
        MYSQL_PASSWORD="{{ mysql_root_password }}"
        CRON_TIME="0 0 * * *"
  become: yes
