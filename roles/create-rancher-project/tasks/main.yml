---
- name: Verify if project exists
  stat: path="{{ inventory_dir }}/group_vars/{{ NAME_PROJECT }}"
  register: project_file
  delegate_to: localhost

- name: Create Project
  uri:
    method: POST
    status_code: 201
    user: "{{ RANCHER_API_KEY_ACCOUNT_TOKEN }}"
    password: "{{ RANCHER_API_KEY_ACCOUNT_SECRET }}"
    body: ' {"description":"{{ NAME_PROJECT }}", "name":"{{ NAME_PROJECT }}", "allowSystemRole":false, "members":[], "swarm":false, "kubernetes":false, "mesos":false, "virtualMachine":false, "publicDns":false, "servicesPortRange":null}'
    HEADER_Accept: "application/json"
    HEADER_Content-Type: "application/json"
    url: http://{{ RANCHER_MASTER_URL }}:{{ RANCHER_MASTER_PORT }}/v1/projects
  register: create_project
  when: project_file.stat.exists == False

- name: "register project id"
  set_fact:
    PROJECT_ID: "{{ create_project.json['id'] }}"
  when: project_file.stat.exists == False

- name: Create API KEY
  uri:
    method: POST
    status_code: 201
    user: "{{ RANCHER_API_KEY_ACCOUNT_TOKEN }}"
    password: "{{ RANCHER_API_KEY_ACCOUNT_SECRET }}"
    body: ' {"accountId":"{{ PROJECT_ID }}", "name":"{{ NAME_PROJECT}}_key"}'
    HEADER_Accept: "application/json"
    HEADER_Content-Type: "application/json"
    url: http://{{ RANCHER_MASTER_URL }}:{{ RANCHER_MASTER_PORT }}/v1/apikeys
  register: api_key
  when: project_file.stat.exists == False

- name: generate project configuration
  template:  src=files/rancher_project_key.j2 dest={{ inventory_dir }}/group_vars/{{ NAME_PROJECT }}
  when: project_file.stat.exists == False
  delegate_to: localhost

- debug: msg="Project apikey generated. You can now vault it with './ansible-vault_wrapper {{ inventory_dir }}/group_vars/{{ NAME_PROJECT }}'"
  when: project_file.stat.exists == False